log = load('oscillations.log');
T_s = 10e-3;
y = log(:,2)*1/(800*4);
u = log(:,4);
u(u>11.3) = 11.3;
t = 0:T_s:(length(y)-1)*T_s;
% figure;
% plot(t,y)
syms z
tau = 0.85*0.11;
I = (tau*(2/T_s*(z-1)/(z+1)) +1)/(tau*2/T_s*(z-1)/(z+1));
I = simplifyFraction(vpa(I))
Kp = 0.45*0.5;
C = Kp*I
num = [0.0012032085561497326203208556149733*197, -0.0012032085561497326203208556149733*177];
den = [1 -1]
syms x y yp xp
eq = vpa(y == 1/den(2)*(num(2)*x+num(1)*xp-den(1)*yp))
% path = '../lib/servo_ctrl/servo_ctrl';
% if  (1)
%     fp = fopen(strcat(path,'.cpp'), "w");
%     fprintf(fp,'#include "servo_ctrl.h"\n');
%     fprintf(fp,'float pictrl(float e){\n');
%     fprintf(fp,'  static float x = e, xp = e, y = 0, yp = 0;\n');
%     fprintf(fp,'  x = e;\n');
%     fprintf(fp,'  y = %s;\n',rhs(eq));
%     fprintf(fp,'  yp = y;\n');
%     fprintf(fp,'  xp = x;\n');
%     fprintf(fp,'  return y;\n');
%     fprintf(fp,'}');
%     fclose(fp);
%     fp = fopen(strcat(path,'.h'), "w");
%     fprintf(fp,'float pictrl(float e);\n');
%     fclose(fp);
% end


syms s tau Kp z Ts
G = Kp*((tau*s+1)/(tau*s));
H = subs(G,s,2/Ts*(z-1)/(z+1))
H = simplifyFraction(vpa(H))

b0 = Ts/tau-1;
b1 = Ts/tau+1;
a1 = 1;
a0 = -1;
z = tf('z');
Gd = Kp*(b1+b0*z^(-1))/(a1+a0*z^(-1));
[ys,t]
  static float x = e, xp = e, y = 0, yp = 0;
  x = e;
  y = 1/a1*(Kp*(b0*x+b1*xp)-a0*yp);